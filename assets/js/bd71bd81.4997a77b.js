"use strict";(self.webpackChunk_bond_wm_docs=self.webpackChunk_bond_wm_docs||[]).push([[498],{1156:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>s});var i=t(3917);const o={},r=i.createContext(o);function a(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),i.createElement(r.Provider,{value:e},n.children)}},4558:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"getting-started/running","title":"Running","description":"After installation and configuration, you can run the window manager and try it","source":"@site/docs/getting-started/running.md","sourceDirName":"getting-started","slug":"/getting-started/running","permalink":"/bond-wm/getting-started/running","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Configuration","permalink":"/bond-wm/getting-started/configuration"},"next":{"title":"Usage","permalink":"/bond-wm/category/usage"}}');var o=t(1273),r=t(1156);const a={sidebar_position:3},s="Running",c={},d=[{value:"Transparency",id:"transparency",level:2}];function l(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"running",children:"Running"})}),"\n",(0,o.jsx)(e.p,{children:"After installation and configuration, you can run the window manager and try it\nout."}),"\n",(0,o.jsxs)(e.p,{children:["As with other X11 window managers, it is common to edit your ",(0,o.jsx)(e.code,{children:".xinitrc"}),"\nfile and add ",(0,o.jsx)(e.code,{children:"bond-wm"})," to the end, making it the last executable invoked\nwhen starting your X server."]}),"\n",(0,o.jsxs)(e.p,{children:["If your configuration package is in a non-default location, specify it via the\n",(0,o.jsx)(e.code,{children:"--config"})," command line parameter."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"bond-wm --config ~/my-desktop-config\n"})}),"\n",(0,o.jsxs)(e.p,{children:["If you omit ",(0,o.jsx)(e.code,{children:"--config"})," it is assumed that your configuration resides in the\n",(0,o.jsx)(e.code,{children:"bond-wm-config"})," folder that the init script creates by default."]}),"\n",(0,o.jsxs)(e.p,{children:["Note that ",(0,o.jsx)(e.code,{children:"--config"}),' doesn\'t have to refer to a local folder. This can be any\n"package identifier" that Node.js can ',(0,o.jsx)(e.code,{children:"require"})," at runtime, provided you have\ninstalled the package. For example, if you want the vanilla react template that\nbond-wm provides, you could ",(0,o.jsx)(e.code,{children:"npm i -g @bond-wm/react-config"})," and then\npass ",(0,o.jsx)(e.code,{children:"--config @bond-wm/react-config"}),"."]}),"\n",(0,o.jsx)(e.h2,{id:"transparency",children:"Transparency"}),"\n",(0,o.jsxs)(e.p,{children:["If you want to have rounded frame window edges with transparency, try using an\nX11 compositor. The ",(0,o.jsx)(e.a,{href:"https://github.com/yshui/picom",children:"picom"})," compositor has been\nfound to work well."]}),"\n",(0,o.jsx)(e.p,{children:"As typical with X11 compositors, they are often ran before the WM itself:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"picom &\nexec bond-wm\n"})}),"\n",(0,o.jsx)(e.p,{children:"Picom enables several effects by default (shadows, fading) which you may want to\ndisable via picom.conf."})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(l,{...n})}):l(n)}}}]);